@model TOT.Dto.VacationDaysDto
@using TOT.Entities
@using Microsoft.AspNetCore.Mvc.Localization
@inject IHtmlLocalizer<TOT.Resources.Resources> Localizer
@{
    var TimeOffTypes = Model.TimeOffTypes;
}


<div class="card" style="width: 18rem;">
    <div class="card-body">


        @{
            int usedPaidDays = TimeOffTypes.FirstOrDefault(tot => tot.TimeOffType == TimeOffType.PaidLeave).UsedDays
                + TimeOffTypes.FirstOrDefault(tot => tot.TimeOffType == TimeOffType.GiftLeave).UsedDays;
            int statutoryPaidDays = TimeOffTypes.FirstOrDefault(tot => tot.TimeOffType == TimeOffType.PaidLeave).StatutoryDays
                + TimeOffTypes.FirstOrDefault(tot => tot.TimeOffType == TimeOffType.GiftLeave).StatutoryDays;

            int usedSickDays = TimeOffTypes.FirstOrDefault(tot => tot.TimeOffType == TimeOffType.ConfirmedSickLeave).UsedDays
                + TimeOffTypes.FirstOrDefault(tot => tot.TimeOffType == TimeOffType.UnofficialSickLeave).UsedDays;
            int statutorySickDays = TimeOffTypes.FirstOrDefault(tot => tot.TimeOffType == TimeOffType.ConfirmedSickLeave).StatutoryDays
                + TimeOffTypes.FirstOrDefault(tot => tot.TimeOffType == TimeOffType.UnofficialSickLeave).StatutoryDays;

            int usedStudyDays = TimeOffTypes.FirstOrDefault(tot => tot.TimeOffType == TimeOffType.StudyLeave).UsedDays;
            int statutoryStudyDays = TimeOffTypes.FirstOrDefault(tot => tot.TimeOffType == TimeOffType.StudyLeave).StatutoryDays;

            int usedAdminDays = TimeOffTypes.FirstOrDefault(tot => tot.TimeOffType == TimeOffType.AdministrativeLeave).UsedDays;
            int statutoryAdminDays = TimeOffTypes.FirstOrDefault(tot => tot.TimeOffType == TimeOffType.AdministrativeLeave).StatutoryDays;

            int usedForPaidPercentage = (usedPaidDays != 0) ? (int)((float)usedPaidDays / statutoryPaidDays * 100) : 0;
            int usedForSickPercentage = (usedSickDays != 0) ? (int)((float)usedSickDays / statutorySickDays * 100) : 0;
            int usedForStudyPercentage = (usedPaidDays != 0) ? (int)((float)usedStudyDays / statutoryStudyDays * 100) : 0;
            int usedForAdminPercentage = (usedSickDays != 0) ? (int)((float)usedAdminDays / statutoryAdminDays * 100) : 0;
        }


        <div>
            <div class="card-title font-weight-bold" style="font-size:110%">
                @Localizer["Paid Leave"]:
                <span>
                    <span class="text-danger">
                        @usedPaidDays
                    </span>
                    <span>/</span>
                    <span class="text-success">@statutoryPaidDays</span>
                </span>
            </div>
            <div class="progress">
                <div class="progress-bar progress-bar-striped bg-info"
                     role="progressbar"
                     style="width: @usedForPaidPercentage%"
                     aria-valuenow=@usedForPaidPercentage.ToString() aria-valuemin="0" aria-valuemax="100"></div>
            </div>

        </div>

        <div>
            <div class="card-title font-weight-bold pt-2" style="font-size:110%">
                @Localizer["Sick Leave"]:
                <span>
                    <span class="text-danger">
                        @usedSickDays
                    </span>
                    <span>/</span>
                    <span class="text-success">@statutorySickDays</span>
                </span>
            </div>
            <div class="progress">
                <div class="progress-bar progress-bar-striped bg-info"
                     role="progressbar"
                     style="width: @usedForSickPercentage%"
                     aria-valuenow=@usedForSickPercentage.ToString() aria-valuemin="0" aria-valuemax="100"></div>
            </div>

        </div>

        <div>
            <div class="card-title font-weight-bold pt-2" style="font-size:110%">
                @Localizer["Study Leave"]:
                <span>
                    <span class="text-danger">
                        @usedStudyDays
                    </span>
                    <span>/</span>
                    <span class="text-success">@statutoryStudyDays</span>
                </span>
            </div>
            <div class="progress">
                <div class="progress-bar progress-bar-striped bg-info"
                     role="progressbar"
                     style="width: @usedForStudyPercentage%"
                     aria-valuenow=@usedForStudyPercentage.ToString() aria-valuemin="0" aria-valuemax="100"></div>
            </div>
        </div>

        <div>
            <div class="card-title font-weight-bold pt-2" style="font-size:110%">
                @Localizer["Administrative Leave"]:
                <span>
                    <span class="text-danger">
                        @usedAdminDays
                    </span>
                    <span>/</span>
                    <span class="text-success">@statutoryAdminDays</span>
                </span>
            </div>
            <div class="progress">
                <div class="progress-bar progress-bar-striped bg-info"
                     role="progressbar"
                     style="width: @usedForAdminPercentage%"
                     aria-valuenow=@usedForAdminPercentage.ToString() aria-valuemin="0" aria-valuemax="100"></div>
            </div>
        </div>
    </div>
</div>
