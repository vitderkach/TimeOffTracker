@model PaginatedList<TOT.Dto.VacationRequestListForManagersDTO>
@using PagedList.Mvc;
@using Microsoft.AspNetCore.Mvc.Localization
@inject IHtmlLocalizer<TOT.Resources.Resources> Localizer
@{
    var response = @Model.FirstOrDefault();
}
<hr />
<div class="form-group row">
    <div class="col-6">
        <a asp-action="Index" class="btn btn-outline-dark" asp-route-currentFilter="Approved">@Localizer["Approved"]</a>
        <a asp-action="Index" class="btn btn-outline-dark" asp-route-currentFilter="In Proccess">@Localizer["Need to review"]</a>
        <a asp-action="Index" class="btn btn-outline-dark" asp-route-currentFilter="Declined">@Localizer["Declined"]</a>
    </div>
    <div class="col-6">
        <div class="row">
            <form asp-action="Index" method="get">
                <div class="form-row">
                    <div class="row col-12">
                        <label for="searchName" class="col-4">@Localizer["Find by name"]:</label>
                        <input type="text" id="searchName" name="SearchString" value="@ViewData["NameSortParm"]" class="form-control col" />
                    </div>
                    <div class="row col-12 justify-content-end p-2">
                        <input type="submit" value=@Localizer["Search"] class="col-3 btn btn-outline-dark" />
                        <a class="col-4 btn btn-outline-dark ml-1" asp-action="Index">@Localizer["Back to Full List"]</a>
                    </div>
                </div>
            </form>
        </div>
    </div>
</div>
<hr />
<table class="table">
    <thead>
        <tr>
            <th>
                @Localizer[Html.DisplayNameFor(model => response.FullName)]
            </th>
            <th>
                @Localizer[Html.DisplayNameFor(model => response.VacationType)]
            </th>
            <th>
                @Localizer[Html.DisplayNameFor(model => response.StartDate)]
            </th>
            <th>
                @Localizer[Html.DisplayNameFor(model => response.EndDate)]
            </th>
            <th>
                @Localizer["Details"]
            </th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            @Html.HiddenFor(model => item.VacationRequestId)
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.FullName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.VacationType)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.StartDate)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.EndDate)
                </td>
                <td>
                    @Html.ActionLink("Open", "Approval", new { id = item.VacationRequestId }, new { @class = "btn btn-outline-dark form-control col-5 m-1" })
                </td>
            </tr>
        }
    </tbody>
</table>


@{
    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : "";
}

<a asp-action="Index"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-pageNumber="@(Model.PageIndex - 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   asp-route-searchString="@ViewData["NameSortParm"]"
   class="btn btn-outline-dark @prevDisabled">
    @Localizer["Previous"]
</a>
<a asp-action="Index"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-pageNumber="@(Model.PageIndex + 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   asp-route-searchString="@ViewData["NameSortParm"]"
   class="btn btn-outline-dark @nextDisabled">
    @Localizer["Next"]
</a>