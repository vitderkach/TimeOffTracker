@model ManagerResponseListViewModel

@{
    ViewData["Title"] = "CurrentRequests";
    var response = Model.Responses.FirstOrDefault();
}

<h3>Current requests</h3>
<br />

<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => response.Employee)
            </th>
            <th>
                @Html.DisplayNameFor(model => response.VacationType)
            </th>
            <th>
                @Html.DisplayNameFor(model => response.StartDate)
            </th>
            <th>
                @Html.DisplayNameFor(model => response.EndDate)
            </th>
            <th>
                Details
            </th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.Responses)
        {
            @Html.HiddenFor(model => item.VacationRequestId)
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Employee)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.VacationType)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.StartDate)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.EndDate)
                </td>
                <td>
                    @Html.ActionLink("Open", "Approval", new { id = item.VacationRequestId }, new { @class = "btn btn-outline-dark form-control col-5 m-1" })
                </td>
            </tr>
        }
    </tbody>
</table>
@if (Model.PageViewModel.HasPreviousPage)
{
    <a asp-action="Index"
       asp-route-page="@(Model.PageViewModel.PageNumber - 1)"
       class="btn btn-outline-dark">

        Prev
    </a>
}
@if (Model.PageViewModel.HasNextPage)
{
    <a asp-action="Index"
       asp-route-page="@(Model.PageViewModel.PageNumber + 1)"
       class="btn btn-outline-dark">
        Next
    </a>
}

