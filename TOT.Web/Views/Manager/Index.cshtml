@model PaginatedList<TOT.Dto.ManagerResponseListDto>
@using PagedList.Mvc;
@{
    var response = @Model.FirstOrDefault();
}
<hr />
<div class="form-group">
    <div class="col-6">
        <a asp-action="Index" class="btn btn-outline-dark" asp-route-currentFilter="Approved">Approved</a>
        <a asp-action="Index" class="btn btn-outline-dark" asp-route-currentFilter="In Proccess">Need to review</a>
        <a asp-action="Index" class="btn btn-outline-dark" asp-route-currentFilter="Declined">Declined</a>
    </div>
    <div class="col-5">
        <form asp-action="Index" method="get">
            <div class="form-actions no-color">
                <p>
                    <label for="searchName">Find by name:</label>
                    <input type="text" id="searchName" name="SearchString" value="@ViewData["CurrentFilter"]" class="form-control" />
                    <input type="submit" value="Search" class="btn btn-outline-dark" />
                    <a class="btn btn-outline-dark" asp-action="Index" >Back to Full List</a>
                </p>
            </div>
        </form> </div>
</div>
<hr />
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => response.Employee)
            </th>
            <th>
                @Html.DisplayNameFor(model => response.VacationType)
            </th>
            <th>
                @Html.DisplayNameFor(model => response.StartDate)
            </th>
            <th>
                @Html.DisplayNameFor(model => response.EndDate)
            </th>
            <th>
                Details
            </th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            @Html.HiddenFor(model => item.VacationRequestId)
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Employee)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.VacationType)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.StartDate)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.EndDate)
                </td>
                <td>
                    @Html.ActionLink("Open", "Approval", new { id = item.VacationRequestId }, new { @class = "btn btn-outline-dark form-control col-5 m-1" })
                </td>
            </tr>
        }
    </tbody>
</table>

@{
    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : "";
}
<a asp-action="Index"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-pageNumber="@(Model.PageIndex - 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   asp-route-searchString="@ViewData["NameSortParm"]"

   class="btn btn-outline-dark @prevDisabled">
    Previous
</a>
<a asp-action="Index"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-pageNumber="@(Model.PageIndex + 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   asp-route-searchString="@ViewData["NameSortParm"]"
   class="btn btn-outline-dark @nextDisabled">
    Next
</a>