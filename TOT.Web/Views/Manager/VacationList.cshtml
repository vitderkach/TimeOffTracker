@model PaginatedList<TOT.Dto.VacationRequestListForManagersDTO>
@using PagedList.Mvc;
@using Microsoft.AspNetCore.Mvc.Localization
@using TOT.Data.Extensions
@inject IHtmlLocalizer<TOT.Resources.Resources> Localizer
@{
    var vacations = @Model.FirstOrDefault();
}
    <div class="form-group">
        <a asp-action="VacationList" class="btn btn-dark" asp-route-currentFilter="">@Localizer["All"]</a>
        <a asp-action="VacationList" class="btn btn-dark" asp-route-currentFilter="Not handled yet">@Localizer["Not handled yet"]</a>
        <a asp-action="VacationList" class="btn btn-success" asp-route-currentFilter="Accepted">@Localizer["Accepted"]</a>
        <a asp-action="VacationList" class="btn btn-success" asp-route-currentFilter="Declined">@Localizer["Declined"]</a>
        <a asp-action="VacationList" class="btn btn-success" asp-route-currentFilter="Declined by other manager">@Localizer["Declined by other manager"]</a>
    </div>
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => vacations.FullName)
            </th>
            <th>
                @Html.DisplayNameFor(model => vacations.StartDate)
            </th>
            <th>
                @Html.DisplayNameFor(model => vacations.EndDate)
            </th>
            <th>
                @Html.DisplayNameFor(model => vacations.VacationType)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
        <tr>
            <td>
                <div>@Html.DisplayFor(modelItem => item.FullName)</div>
                <div><small>@Html.DisplayFor(modelItem => item.Email)</small></div>
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.StartDate)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.EndDate)
            </td>
            <td>
                @Html.DisplayFor(modelItem => @Localizer[item.VacationType.GetDescription()].Value)
            </td>
            <td>
                @if (item.ManagerApproval == true)
                {
                    <text>@Localizer["Accepted"].Value</text>
                }
                else if (item.ManagerApproval == false)
                {
                    <text>@Localizer["Declined"].Value</text>
                }
                else if(item.ManagerApproval == null && item.Approval == false)
                {
                    <text>@Localizer["Declined by other manager"].Value</text>
                }
            </td>
            <td>
                <div class="row align-items-center">
                    <a class="btn btn-outline-dark form-control m-1" asp-action="Details" asp-route-vacationId="@item.VacationRequestId">Details</a>
                </div>
            </td>
        </tr>
        }
    </tbody>
</table>

@{
    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : "";
}

<a asp-action="List"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-pageNumber="@(Model.PageIndex - 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-secondary @prevDisabled">
    @Localizer["Previous"]
</a>
<a asp-action="List"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-pageNumber="@(Model.PageIndex + 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-secondary @nextDisabled">
    @Localizer["Next"]
</a>