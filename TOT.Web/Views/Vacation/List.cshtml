@model PaginatedList<TOT.Dto.VacationRequestListDto>
@using PagedList.Mvc;
@{
    var vacations = @Model.FirstOrDefault();
}
<hr />
<div class="form-group">
    <div class="col-6">
        <a asp-action="List" class="btn btn-outline-dark" asp-route-currentFilter="All">All</a>
        <a asp-action="List" class="btn btn-outline-dark" asp-route-currentFilter="Approved">Approved</a>
        <a asp-action="List" class="btn btn-outline-dark" asp-route-currentFilter="In Proccess">In Proccess</a>
        <a asp-action="List" class="btn btn-outline-dark" asp-route-currentFilter="Declined">Declined</a>
    </div>
</div>
<hr />
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => vacations.StartDate)
            </th>
            <th>
                @Html.DisplayNameFor(model => vacations.EndDate)
            </th>
            <th>
                @Html.DisplayNameFor(model => vacations.VacationType)
            </th>
            <th>
                @Html.DisplayNameFor(model => vacations.Notes)
            </th>
            <th>
                @Html.DisplayNameFor(model => vacations.Approval)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.StartDate)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.EndDate)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.VacationType)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Notes)
                </td>
                <td>
                    @{
                        if (item.Approval == null)
                        { <div> In Process </div> }
                        if (item.Approval == false)
                        { <div> Declined </div> }
                        if (item.Approval == true)
                        { <div> Approved </div> }
                    }
                </td>
                <td>
                    <div class="row justify-content-end">
                        @{
                            @Html.ActionLink("Edit", "Edit", new { id = item.VacationRequestId }, new { @class = "btn btn-outline-dark form-control col-5 m-1" })
                            if (item.Approval == null)
                            {
                                @Html.ActionLink("Delete", "Delete", new { id = item.VacationRequestId }, new { @class = "btn btn-outline-dark form-control col-5 m-1" })
                            }
                            else
                            {
                                <button class="btn btn-outline-dark form-control col-5 m-1" disabled>Delete</button>
                            }
                        }
                    </div>
                </td>
            </tr>
        }
    </tbody>
</table>

@{
    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : "";
}

<a asp-action="List"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-pageNumber="@(Model.PageIndex - 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-outline-dark @prevDisabled">
    Previous
</a>
<a asp-action="List"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-pageNumber="@(Model.PageIndex + 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-outline-dark @nextDisabled">
    Next
</a>