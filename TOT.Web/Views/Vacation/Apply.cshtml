@model TOT.Dto.ApplyForRequestGetDto

@{
    ViewData["Title"] = "Apply";
}

<div class="row">
    <div class="container col-6">
        <h2>Apply for vacation</h2>
        <hr />
        <form asp-action="Apply" name="form" id="form">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group row">
                <label asp-for="StartDate" class="control-label col-4"></label>
                <input asp-for="StartDate" class="form-control col-8" />
                <span asp-validation-for="StartDate" class="text-danger"></span>
            </div>
            <div class="form-group row">
                <label asp-for="EndDate" class="control-label col-4"></label>
                <input asp-for="EndDate" class="form-control col-8" />
                <span asp-validation-for="EndDate" class="text-danger"></span>
            </div>

            <div class="form-row row">
                <label class="control-label col-4" for="EndDate">Vacation types</label>
                @Html.DropDownListFor(m => m.SelectedTimeOffType, ViewBag.TimeOffTypes as SelectList, new { @class = "form-control col-8" })
            </div>
            <div class="form-group mt-2">
                <label asp-for="Notes" class="control-label col-4"></label>
                <textarea style="resize:none" asp-for="Notes" class="form-control col-12" rows="3"></textarea>
                <span asp-validation-for="Notes" class="text-danger"></span>
            </div>
            <div class="container_selectedManagers form-group">
                <label class="control-label" for="EndDate">Managers</label>
                <div class="row col-12">
                    @Html.DropDownListFor(m => m.SelectedManager, ViewBag.Managers as SelectList, new { @class = "form-control col-10" })
                    <button class="btn btn-info add_form_field form-control col ">+</button>
                </div>
            </div>
            <div class="form-group mt-5">
                <a class="btn btn-outline-dark" asp-action="List">Back to List</a>
                <!--<input type="submit" id="submit-button" value="Create" class="btn btn-outline-dark" />-->

                <button type="button" data-target="#applyCreate" data-toggle="modal" class="btn btn-outline-dark">Create</button>
                <!-- Create window -->
                <div class="modal fade" id="applyCreate" tabindex="-1" role="dialog" aria-labelledby="createLabel" aria-hidden="true">
                    <div class="modal-dialog" role="document">
                        <div class="modal-content">
                            <div class="modal-header">
                                <h5 class="modal-title" id="createLabel"><span><b>Are you sure?</b></span></h5>
                                <button type="button" class="close" data-dismiss="modal" aria-label="Candel">
                                    <span aria-hidden="true">&times;</span>
                                </button>
                            </div>
                            <div class="modal-body">
                                <p>
                                    Do you really want to create a vacation request? <br />
                                    <!--Не получается добавить расширенное описание. Например, Model.SelectedTimeOffType, 
                                        Model.StartDate и т.д. Возможно из-за JS. -->
                                </p>
                            </div>
                            <div class="modal-footer">
                                <button type="button" class="btn btn-default" data-dismiss="modal">Cancel</button>
                                <!--Может дело в id="submit-button"-->
                                <input id="submit-button" type="submit" value="Create" class="btn btn-outline-dark" />
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </form>
    </div>
</div>



@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}


    <script>
        $(document).ready(function () {
            var max_fields = 10;
            var wrapper = $(".container_selectedManagers");
            var add_button = $(".add_form_field");
            var select_tag = $("#SelectedManager").children("option:selected");
            var selectedManagerId;
            var selectedManagerObject = [];
            let id = select_tag.val();
            let text = select_tag.text();
            selectedManagerId = id;
            $("#SelectedManager").change(function () {
                let id = $(this).children("option:selected").val();
                selectedManagerId = id;
                console.log(selectedManagerId)
            });
            var x = 1;
            $(add_button).click(function (e) {
                e.preventDefault();
                if (x < max_fields) {
                    let id = $("#SelectedManager").children("option:selected").val();
                    let text = $("#SelectedManager").children("option:selected").text();
                    if (selectedManagerObject.filter(obj => { return obj.Id == id }).length == 0) {
                        selectedManagerObject.push({ Id: id, name: text });
                        x++;
                        var myname = selectedManagerObject.find(obj => { return obj.Id === selectedManagerId }).name;
                        $(wrapper).append('<div class="form-row mt-2">' +
                            '<div class="col-10"><input type="text" class="form-control" disabled=true value="' + myname + '" name=ManagersId[' + (x - 2) + '] /></div> ' +
                            '<div class="col"><button class="btn btn-danger form-control col delete">x</button></div> </div>');
                        //add input box
                    }
                    else { alert('This manager already exists') }
                }
                else { alert('You Reached the limits') }
            });
            $(wrapper).on("click", ".delete", function (e) {
                e.preventDefault();
                var text = $(this).parent('div').prev('div').children('input').val();
                console.log(text);
                console.log('before: ' + selectedManagerObject);
                selectedManagerObject = selectedManagerObject.filter(obj => { return obj.name != text });
                console.log('after: ' + selectedManagerObject);
                x--;
                $(this).parent('div').parent('div').remove();
            })
            $("#form").on("submit", function (event) {
                var start = $("#StartDate").val();
                var end = $("#EndDate").val();
                var typeOff = $("#SelectedTimeOffType").val();
                var notes = $("#Notes").val();
                var managersId = [];
                for (let val of selectedManagerObject) {
                    managersId.push(val.Id);
                }
                var data = {};
                data["StartDate"] = start;
                data["EndDate"] = end;
                data["SelectedTimeOffType"] = typeOff;
                data["Notes"] = notes;
                data["SelectedManager"] = managersId;
                data["ManagersId"] = managersId;
                console.log(data);

                $.ajax({
                    type: 'POST',
                    accepts: "application/json",
                    url: '/Vacation/Apply',
                    contentType: 'application/json',
                    data: JSON.stringify(data),
                    success: function () {

                    },
                    complete: function (jqXHR) {
                        if (jqXHR.status == 200) {
                            location.href = "/Vacation/List";
                        }
                        else {
                            alert('Error!');
                        }
                    }
                })
                event.preventDefault();
            });
        });
    </script>
}