@model TOT.Dto.VacationRequestDto
@using TOT.Dto;
@{
    ViewData["Title"] = "Edit";
}
    <form asp-controller="Vacation" asp-action="Edit" method="post">
        <div class="container col-6">
            <div>
                <div class="form-row">
                    <div class="form-group col-md-6">
                        <label for="inputEmail4">
                            @Html.DisplayNameFor(model => model.StartDate)
                        </label>
                        @Html.EditorFor(model => model.StartDate, null, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                    </div>
                    <div class="form-group col-md-6">
                        <label for="inputPassword4">
                            @Html.DisplayNameFor(model => model.EndDate)
                        </label>
                        @Html.EditorFor(model => model.EndDate, null, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })

                    </div>
                </div>
                @Html.DisplayNameFor(model => model.VacationType)
                @Html.EditorFor(model => model.VacationTypeString, null, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                @Html.DisplayNameFor(model => model.Notes)
                @Html.TextAreaFor(model => model.Notes, 3, 1, new { @class = "form-control", @style = "resize:none;" })
            </div>
            <div>
                @foreach (ManagerResponseDto response in Model.ManagersResponses)
                {
                    <div class="card mt-3">
                        <div class="card-body">
                            <h5 class="card-title">
                                @Html.DisplayFor(model => response.Manager.UserInformation.FullName)
                                <hr />
                            </h5>
                            <p class="card-text">
                                @{
                                    if (response.Notes == null)
                                    {
                                        <div style="opacity:50%;">Empty</div>
                                    }
                                    else
                                    {
                                        @Html.DisplayFor(model => response.Notes)
                                    }
                                }
                            </p>
                        </div>
                    </div>
                }
            </div>
        </div>

        <div>
            <input type="submit" value="Save" class="btn btn-outline-dark" />
            <button class="btn btn-outline-dark" asp-action="List">Cancel</button>
        </div>

    </form>
